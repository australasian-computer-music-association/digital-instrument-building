<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><!-- InstanceBegin template="/Templates/level2.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<!-- InstanceBeginEditable name="doctitle" -->
<title>Digital Instrument Building</title>
<!-- InstanceEndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Script-Type" content="text/javascript">
<META NAME="DC.Creator" CONTENT="PersonalName= Andrew R. Brown  ">
<META NAME="DC.Creator.Email" CONTENT="algorithmicmusic@gmail.com,">
<META NAME="DC.Rights" CONTENT="Andrew R. Brown ">
<META NAME="DC.Title" CONTENT="Digital Instrument Building - Music software development with jMusic">
<META NAME="DC.Title.Alternative" content ="Music software development with jMusic">
<META NAME="DC.Subject" CONTENT="music, java, composition, algorithmic, digital music, generative music, instrument building, music analysing software development, Australia">
<META NAME="DC.Description" CONTENT="This site is a tutorial resource designed to assist in the training and self education of up-and-coming digital instrument developers. The tutorials cover topics including music software design, audio synthesis, digital signal processing, compositional systems, and computer programming concepts. ">
<META NAME="DC.Language" SCHEME="rfc1766" CONTENT="en-au">
<META NAME="DC.Audience" CONTENT="All">
<META NAME="DC.Date.Created" CONTENT="06-04-2003">
<META NAME="DC.Availability" CONTENT="PersonalName= Andrew R. Brown; email= algorithmicmusic@gmail.com">

<!-- ImageReady Preload Script (menubanner2.psd) -->
<SCRIPT TYPE="text/javascript">
<!--

function newImage(arg) {
	if (document.images) {
		rslt = new Image();
		rslt.src = arg;
		return rslt;
	}
}

function changeImages() {
	if (document.images && (preloadFlag == true)) {
		for (var i=0; i<changeImages.arguments.length; i+=2) {
			document[changeImages.arguments[i]].src = changeImages.arguments[i+1];
		}
	}
}

var preloadFlag = false;
function preloadImages() {
	if (document.images) {
		Music_algorithms_over = newImage("images/Music-algorithms-over.jpg");
		Interfaces_over = newImage("images/Interfaces-over.jpg");
		Programming_over = newImage("images/Programming-over.jpg");
		Acoustics_over = newImage("images/Acoustics-over.jpg");
		context_over = newImage("images/context-over.jpg");
		audio_over = newImage("images/audio-over.jpg");
		MIDI_over = newImage("images/MIDI-over.jpg");
		preloadFlag = true;
	}
}

// -->
</SCRIPT>
<!-- End Preload Script -->
<script language="JavaScript" type="text/JavaScript">
<!--


function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.01
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && d.getElementById) x=d.getElementById(n); return x;
}
//-->
</script>
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);

function MM_nbGroup(event, grpName) { //v6.0
  var i,img,nbArr,args=MM_nbGroup.arguments;
  if (event == "init" && args.length > 2) {
    if ((img = MM_findObj(args[2])) != null && !img.MM_init) {
      img.MM_init = true; img.MM_up = args[3]; img.MM_dn = img.src;
      if ((nbArr = document[grpName]) == null) nbArr = document[grpName] = new Array();
      nbArr[nbArr.length] = img;
      for (i=4; i < args.length-1; i+=2) if ((img = MM_findObj(args[i])) != null) {
        if (!img.MM_up) img.MM_up = img.src;
        img.src = img.MM_dn = args[i+1];
        nbArr[nbArr.length] = img;
    } }
  } else if (event == "over") {
    document.MM_nbOver = nbArr = new Array();
    for (i=1; i < args.length-1; i+=3) if ((img = MM_findObj(args[i])) != null) {
      if (!img.MM_up) img.MM_up = img.src;
      img.src = (img.MM_dn && args[i+2]) ? args[i+2] : ((args[i+1])? args[i+1] : img.MM_up);
      nbArr[nbArr.length] = img;
    }
  } else if (event == "out" ) {
    for (i=0; i < document.MM_nbOver.length; i++) {
      img = document.MM_nbOver[i]; img.src = (img.MM_dn) ? img.MM_dn : img.MM_up; }
  } else if (event == "down") {
    nbArr = document[grpName];
    if (nbArr)
      for (i=0; i < nbArr.length; i++) { img=nbArr[i]; img.src = img.MM_up; img.MM_dn = 0; }
    document[grpName] = nbArr = new Array();
    for (i=2; i < args.length-1; i+=2) if ((img = MM_findObj(args[i])) != null) {
      if (!img.MM_up) img.MM_up = img.src;
      img.src = img.MM_dn = (args[i+1])? args[i+1] : img.MM_up;
      nbArr[nbArr.length] = img;
  } }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}
//-->
</script>
<!-- InstanceBeginEditable name="head" -->
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}
//-->
</script>
<!-- InstanceEndEditable -->
<link href="../style/main.css" rel="stylesheet" type="text/css">
</head>
<body leftmargin="3" topmargin="3" marginwidth="0" marginheight="0"  onLoad="MM_preloadImages('../images/banner/audio-over.jpg','../images/banner/MIDI-over.jpg','../images/banner/Music-algorithms-over.jpg','../images/banner/Interfaces-over.jpg','../images/banner/Programming-over.jpg','../images/banner/Acoustics-over.jpg','../images/banner/context-over.jpg','../images/banner/banner_08.gif','../images/buttons/A_musdat_do.jpg','../images/buttons/A_input_do.jpg','../images/buttons/A_synth_do.jpg')">
<table width="729" border="0" align="center">
  <tr> 
    <td colspan="5" align="left"> <div align="center"> 
        <table border="0" align="left" cellpadding="0" cellspacing="0">
          <tr> 
            <td colspan="8"><img src="../images/banner.jpg" alt="Home" width=758 height=57 border="0" usemap="#Map5"></td>
          </tr>
          <tr> 
            <td width="50"><a href="audio.htm" target="_top" onClick="MM_nbGroup('down','group1','Audio','../images/banner/audio-over.jpg',1)" onMouseOver="MM_nbGroup('over','Audio','../images/banner/audio-over.jpg','../images/banner/audio-over.jpg',1)" onMouseOut="MM_nbGroup('out')"><img src="../images/banner/audio.jpg" alt="audio" name="Audio" width="50" height="24" border="0" onload=""></a></td>
            <td width="47"><a href="../midi/midi.htm" target="_top" onClick="MM_nbGroup('down','group1','MIDI','../images/banner/MIDI-over.jpg',1)" onMouseOver="MM_nbGroup('over','MIDI','../images/banner/MIDI-over.jpg','../images/banner/MIDI-over.jpg',1)" onMouseOut="MM_nbGroup('out')"><img src="../images/banner/MIDI.jpg" alt="MIDI" name="MIDI" width="47" height="24" border="0" onload=""></a></td>
            <td width="117"><a href="../musalgo/musalgo.htm" target="_top" onClick="MM_nbGroup('down','group1','musalgorithms','../images/banner/Music-algorithms-over.jpg',1)" onMouseOver="MM_nbGroup('over','musalgorithms','../images/banner/Music-algorithms-over.jpg','../images/banner/Music-algorithms-over.jpg',1)" onMouseOut="MM_nbGroup('out')"><img src="../images/banner/Music-algorithms.jpg" alt="Music Algorithms" name="musalgorithms" width="117" height="24" border="0" onload=""></a></td>
            <td width="88"><a href="../interfaces/interface.htm" target="_top" onClick="MM_nbGroup('down','group1','Interfaces','../images/banner/Interfaces-over.jpg',1)" onMouseOver="MM_nbGroup('over','Interfaces','../images/banner/Interfaces-over.jpg','../images/banner/Interfaces-over.jpg',1)" onMouseOut="MM_nbGroup('out')"><img src="../images/banner/Interfaces.jpg" alt="Interfaces" name="Interfaces" width="88" height="24" border="0" onload=""></a></td>
            <td width="103"><a href="../programming/programming.htm" target="_top" onClick="MM_nbGroup('down','group1','Programming','../images/banner/Programming-over.jpg',1)" onMouseOver="MM_nbGroup('over','Programming','../images/banner/Programming-over.jpg','../images/banner/Programming-over.jpg',1)" onMouseOut="MM_nbGroup('out')"><img src="../images/banner/Programming.jpg" alt="Programming" name="Programming" width="103" height="24" border="0" onload=""></a></td>
            <td width="81"><a href="../acoustics/acoustics.htm" target="_top" onClick="MM_nbGroup('down','group1','Acoustics','../images/banner/Acoustics-over.jpg',1)" onMouseOver="MM_nbGroup('over','Acoustics','../images/banner/Acoustics-over.jpg','../images/banner/Acoustics-over.jpg',1)" onMouseOut="MM_nbGroup('out')"><img src="../images/banner/Acoustics.jpg" alt="Acoustics" name="Acoustics" width="81" height="24" border="0" onload=""></a></td>
            <td width="100"><a href="../context/context.htm" target="_top" onClick="MM_nbGroup('down','group1','Context','../images/banner/context-over.jpg',1)" onMouseOver="MM_nbGroup('over','Context','../images/banner/context-over.jpg','../images/banner/context-over.jpg',1)" onMouseOut="MM_nbGroup('out')"><img src="../images/banner/context.jpg" alt="Context" name="Context" width="100" height="24" border="0" onload=""></a></td>
            <td width="156"><img src="../images/banner/banner_09.gif" width="172" height="24"></td>
          </tr>
        </table>
      </div></td>
  </tr>
  <tr> 
    <td width="3" align="left"> <div align="right"></div>
      <div align="right"></div>
      <div align="right"></div></td>
    <!-- InstanceBeginEditable name="tracker" --> 
    <td height="16" colspan="2" rowspan="2"><a href="audio.htm">&gt; Audio</a> 
    </td>
    <!-- InstanceEndEditable --> 
    <td width="3" rowspan="2" align="left">&nbsp;</td>
    <td rowspan="2" align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td width="3" rowspan="3" align="left">&nbsp;</td>
  </tr>
  <tr> <!-- InstanceBeginEditable name="header" --> 
    <td colspan="2" align="left" valign="top"><img src="../images/HEBaud.jpg" alt="Audio" width="113" height="23"></td>
    <!-- InstanceEndEditable --> <!-- InstanceBeginEditable name="vrule" --> 
    <td align="left" valign="top">&nbsp;</td>
    <!-- InstanceEndEditable --> <!-- InstanceBeginEditable name="heading" -->
    <td align="left" valign="top"><strong>TUTORIALS:</strong></td>
    <!-- InstanceEndEditable --></tr>
  <tr> <!-- InstanceBeginEditable name="image" --> 
    <td width="68" height="21" align="left" valign="top" nowrap> <img src="../images/wave003.gif" alt="Audio" width="65" height="61"></td>
    <!-- InstanceEndEditable --> <!-- InstanceBeginEditable name="intro" -->
    <td width="343" align="left" valign="top" nowrap>Digital musical instruments 
      make sound by generating streams of audio.<br>
      <br>
      In this section we look at how digital audio is created and controlled.</td>
    <!-- InstanceEndEditable --><!-- InstanceBeginEditable name="vrule1" --> 
    <td rowspan="16" align="left" valign="top"><div align="right"></div></td>
    <!-- InstanceEndEditable --><!-- InstanceBeginEditable name="tutorials" --> 
    <td width="221" rowspan="16" valign="top">
<div align="left">
        <div align="left"> 
          <p class="margin"><a href="musicaldata.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('musdat','','../images/buttons/A_musdat_do.jpg',1)"><img src="../images/buttons/A_musdat_up.jpg" alt="Musical Data" name="musdat" width="113" height="23" border="0"></a><a href="musicaldata.htm">&gt;&gt; 
            read more.<br>
            </a>The organisation of digital sound for<br>
            musical purposes requires the <br>
            interpretation of musical ideas into sound parameters. <br>
            <br>
            This section looks at how<br>
            music is described so that appropriate <br>
            audio results are achieved.<br>
            <br>
            <a href="synthesis.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('synth','','../images/buttons/A_synth_do.jpg',1)"><img src="../images/buttons/A_synth_up.jpg" alt="Synthesis" name="synth" width="113" height="23" border="0"></a><a href="synthesis.htm">&gt;&gt; 
            read more.<br>
            </a>The creation of sound is through <br>
            synthesis. <br>
            <br>
            In this section we examine some of the <br>
            methods of sound synthesis and how to<br>
            incorporate them into your digital <br>
            instrument<br>
            <br>
            <a href="in_out.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Input','','../images/buttons/A_input_do.jpg',1)"><img src="../images/buttons/A_input_up.jpg" alt="Input/output" name="Input" width="113" height="23" border="0"></a><a href="in_out.htm">&gt;&gt; 
            read more</a> <br>
            Getting sound in and out of your<br>
            instrument is a vital aspect of its <br>
            operation. <br>
            <br>
            In this section we look at audio capture<br>
            and audio streams taking into account <br>
            issues of quality and spatialisation. <br>
            <br>
            <br>
            <br>
            <br>
            <br>
            <br>
          </p>
          </div>
        </div>
      </td>
    <!-- InstanceEndEditable --></tr>
  <tr> 
    <td align="left"> <div align="left"><br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
      </div></td>
    <!-- InstanceBeginEditable name="content" --> 
    <td colspan="2" rowspan="16" align="left" valign="top"><h2><br>
        <img src="../images/hrule.jpg" width="385" height="4"><br>
        <br>
        Digital Audio - By Paul Doornbusch </h2>
      <p>Digital audio, at its most fundamental level, is representing audio waveforms 
        as a series of numbers. Typically, the numbers represent the amplitude 
        of the waveform at regular times. For CDs, the numbers are 16 bits large 
        and they occur 44,100 times a second. 16 bit numbers can represent 65,535 
        discrete values, and this equates to an amplitude range or dynamic range 
        (the difference between the quietest and loudest sounds) of about 96dB. 
        Numbers with fewer or more bits can represent fewer or more numbers respectively 
        and this translates into a lower or greater dynamic range. The frequency 
        at which the waveform amplitude is measured is called the sampling rate, 
        and the highest audio frequency that can ideally be encoded and decoded 
        digitally is half of the sampling rate. In practice, it is a little less 
        than that. Audio signals are &#8220;analog&#8221; and they are converted 
        to and from their digital representation by hardware chips called Digital-to-Analog 
        Converters (DAC) and Analog-to-Digital Converters (ADC). </p>
      <p>There are several benefits of digital audio over analog audio. For audio 
        distribution, there are benefits in the simplicity of making very accurate 
        copies of an original. For electronic instruments and music, the benefits 
        lie in the capacity and flexibility for manipulation and synthesis that 
        it offers. For example, digital recording avoids the analog distortions 
        of tape hiss and so on (analog recording may also have advantages over 
        digital too). This also allows non destructive editing of the sound in 
        a digital audio work-station (DAW), a massive improvement over analog 
        editing. Digital audio also opens a world of Digital Signal Processing 
        (DSP), either by standard computers or by dedicated hardware.</p>
      <p>DSP technology is nowadays commonplace in such devices as mobile phones, 
        multimedia computers, video recorders, CD players, hard disc drive controllers 
        and modems, and will soon replace analog circuitry in TV sets and telephones. 
        One important application of DSP is in signal compression and decompression. 
        For example, signal compression is used in digital cellular phones to 
        allow a greater number of calls to be handled simultaneously and DSP compression 
        is the technology behind MP3 encoding. DSP technology is also behind all 
        current synthesisers and signal processors.</p>
      <p>While the mathematical theory underlying DSP techniques such as Fast 
        Fourier Transforms, Hilbert Transforms, filter design and signal compression 
        algorithms can be quite complex, the numerical operations required to 
        implement these techniques are in fact very simple, being mainly simply 
        adding, subtracting and multiplying. However, for real time applications, 
        millions of these operations must be carried out on perhaps millions of 
        samples each second and this is a non-trivial task. The examples of DSP 
        applications mentioned earlier, such as hard disc drives and mobile phones, 
        demand real-time operation, as does real time digital processing or synthesis 
        for a digital musical instrument.</p>
      <p>Digital filters basically come in two types; Infinite Impulse Response 
        (IIR) and Finite Impulse Response (FIR). The main difference is that an 
        FIR filter does not use any feedback and an IIR filter feeds some percentage 
        of its output back to its input. Most musical applications use IIR filters, 
        sometimes to achieve the familiar resonant filter effect. </p>
      <p>A Discrete Fourier Transform (DFT) is a way to work out what frequencies, 
        or sine waves, exist in a signal and what amplitude and phase those signals 
        are, this is called the spectrum of the sound. There have been ways developed 
        to do this very quickly and this is called a Fast Fourier Transform (FFT). 
        Once the signal components are known, they can be manipulated in a number 
        of musically useful ways and then reconstructed into a complete signal 
        by a process known as an Inverse Fast Fourier Transform (IFFT). This is 
        called frequency domain processing, as opposed to time domain processing 
        in IIR and FIR filters. For example, if the frequency of all of the signal 
        components was doubled and then recombined through an IFFT, the sound 
        would be an octave higher. </p>
      <p>DSP techniques are at the core of sound synthesis and modification processes. 
        Most musicians building digital instruments use some original configuration 
        of DSP synthesis and processing to create a unique sound.<br>
        <br>
      </p></td>
    <!-- InstanceEndEditable --></tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
  </tr>
  <tr> 
    <td align="left">&nbsp;</td>
    <td align="left">&nbsp;</td>
    <td align="left">&nbsp;</td>
  </tr>
</table>
<blockquote> 
  <p name="Map"> 
    <map name="Map">
      <area shape="rect" coords="4,4,41,29" href="http://jmusic.ci.qut.edu" target="_blank" alt="jMusic">
      <area shape="rect" coords="43,5,80,31" href="http://www.ozco.gov.au" target="_blank" alt="Australia Council">
      <area shape="rect" coords="83,4,108,29" href="http://www.qut.com" target="_blank" alt="Queensland University of Technology">
    </map>
    <map name="Map2">
      <area shape="rect" coords="702,1,758,12" href="../extras/sitemap.html" target="_self" alt="Sitemap">
      <area shape="rect" coords="629,1,687,12" href="../extras/contact.html" target="_self" alt="Contact">
      <area shape="rect" coords="574,1,615,14" href="../index.html" target="_self" alt="Home">
    </map>
    <map name="Map3">
      <area shape="rect" coords="553,5,601,18" href="#" alt="Home">
      <area shape="rect" coords="612,4,671,18" href="#">
      <area shape="rect" coords="683,3,735,19" href="#">
      <area shape="rect" coords="9,8,227,59" href="#" target="index.html">
    </map>
    <map name="Map4">
      <area shape="rect" coords="6,9,40,41" href="http://www.qut.com" target="_blank" alt="http://www.qut.com">
      <area shape="rect" coords="44,14,87,42" href="http://explodingart.com/jmusic" target="_blank" alt="http://explodingart.com/jmusic">
      <area shape="rect" coords="90,9,138,43" href="http://www.ozco.gov.au" target="_parent" alt="http://www.ozco.gov.au">
      <area shape="rect" coords="313,13,512,36" href="../contact.html">
    </map>
  </p>
</blockquote>
<map name="Map5">
  <area shape="rect" coords="-7,4,228,51" href="../index.htm" target="_self" alt="Digital Instrument making">
  <area shape="rect" coords="595,2,658,16" href="../index.htm">
  <area shape="rect" coords="677,2,754,18" href="../extras/contact.htm" alt="Contact">
</map>
</body>
<!-- InstanceEnd --></html>
